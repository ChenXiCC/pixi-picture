/*!
 * pixi-picture - v1.0.2
 * Compiled Mon Oct 10 2016 03:32:17 GMT+0300 (RTZ 2 (зима))
 *
 * pixi-picture is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r;r="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,(r.pixiPicture||(r.pixiPicture={})).min=e()}}(function(){return function e(r,t,n){function i(a,u){if(!t[a]){if(!r[a]){var s="function"==typeof require&&require;if(!u&&s)return s(a,!0);if(o)return o(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var d=t[a]={exports:{}};r[a][0].call(d.exports,function(e){var t=r[a][1][e];return i(t?t:e)},d,d.exports,e,r,t,n)}return t[a].exports}for(var o="function"==typeof require&&require,a=0;a<n.length;a++)i(n[a]);return i}({1:[function(e,r,t){function n(e,r){i.call(this,e,"#define GLSLIFY 1\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\nuniform mat3 mapMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vMapCoord;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n    vMapCoord = (mapMatrix * vec3(aVertexPosition, 1.0)).xy;\n}\n","#define GLSLIFY 1\nvarying vec2 vTextureCoord;\nvarying vec2 vMapCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler[2];\nuniform vec4 uColor;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n    vec4 source = texture2D(uSampler[0], textureCoord) * uColor;\n    vec4 target = texture2D(uSampler[1], vMapCoord);\n\n    //reverse hardlight\n    if (source.a == 0.0) {\n        gl_FragColor = vec4(0, 0, 0, 0);\n        return;\n    }\n    //yeah, premultiplied\n    vec3 Cb = source.rgb/source.a, Cs;\n    if (target.a > 0.0) {\n        Cs = target.rgb / target.a;\n    }\n    vec3 multiply = Cb * Cs * 2.0;\n    vec3 Cs2 = Cs * 2.0 - 1.0;\n    vec3 screen = Cb + Cs2 - Cb * Cs2;\n    vec3 B;\n    if (Cb.r <= 0.5) {\n        B.r = multiply.r;\n    } else {\n        B.r = screen.r;\n    }\n    if (Cb.g <= 0.5) {\n        B.g = multiply.g;\n    } else {\n        B.g = screen.g;\n    }\n    if (Cb.b <= 0.5) {\n        B.b = multiply.b;\n    } else {\n        B.b = screen.b;\n    }\n    vec4 res;\n    res.xyz = (1.0 - source.a) * Cs + source.a * B;\n    res.a = source.a + target.a * (1.0-source.a);\n    gl_FragColor = vec4(res.xyz * res.a, res.a);\n}\n",r),this.bind(),this.uniforms.uSampler=[0,1]}var i=e("./PictureShader");n.prototype=Object.create(i.prototype),n.prototype.constructor=n,r.exports=n},{"./PictureShader":5}],2:[function(e,r,t){function n(e,r){i.call(this,e,"#define GLSLIFY 1\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n}\n","#define GLSLIFY 1\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\nuniform vec4 uColor;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n\n    vec4 sample = texture2D(uSampler, textureCoord);\n    gl_FragColor = sample * uColor;\n}\n",r),this.bind(),this.uniforms.uColor=new Float32Array(1,1,1,1)}var i=e("./PictureShader");n.prototype=Object.create(i.prototype),n.prototype.constructor=n,r.exports=n},{"./PictureShader":5}],3:[function(e,r,t){function n(e,r){i.call(this,e,"#define GLSLIFY 1\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\nuniform mat3 mapMatrix;\n\nvarying vec2 vTextureCoord;\nvarying vec2 vMapCoord;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n    vMapCoord = (mapMatrix * vec3(aVertexPosition, 1.0)).xy;\n}\n","#define GLSLIFY 1\nvarying vec2 vTextureCoord;\nvarying vec2 vMapCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler[2];\nuniform vec4 uColor;\n%SPRITE_UNIFORMS%\n\nvoid main(void)\n{\n    %SPRITE_CODE%\n    vec4 source = texture2D(uSampler[0], textureCoord) * uColor;\n    vec4 target = texture2D(uSampler[1], vMapCoord);\n\n    //reverse hardlight\n    if (source.a == 0.0) {\n        gl_FragColor = vec4(0, 0, 0, 0);\n        return;\n    }\n    //yeah, premultiplied\n    vec3 Cb = source.rgb/source.a, Cs;\n    if (target.a > 0.0) {\n        Cs = target.rgb / target.a;\n    }\n    vec3 multiply = Cb * Cs * 2.0;\n    vec3 Cb2 = Cb * 2.0 - 1.0;\n    vec3 screen = Cb2 + Cs - Cb2 * Cs;\n    vec3 B;\n    if (Cs.r <= 0.5) {\n        B.r = multiply.r;\n    } else {\n        B.r = screen.r;\n    }\n    if (Cs.g <= 0.5) {\n        B.g = multiply.g;\n    } else {\n        B.g = screen.g;\n    }\n    if (Cs.b <= 0.5) {\n        B.b = multiply.b;\n    } else {\n        B.b = screen.b;\n    }\n    vec4 res;\n    res.xyz = (1.0 - source.a) * Cs + source.a * B;\n    res.a = source.a + target.a * (1.0-source.a);\n    gl_FragColor = vec4(res.xyz * res.a, res.a);\n}\n",r),this.bind(),this.uniforms.uSampler=[0,1]}var i=e("./PictureShader");n.prototype=Object.create(i.prototype),n.prototype.constructor=n,r.exports=n},{"./PictureShader":5}],4:[function(e,r,t){function n(e){PIXI.ObjectRenderer.call(this,e)}function i(e){return e+=0===e,--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e+1}var o=e("./NormalShader"),a=e("./mapFilterBlendModesToPixi");PIXI.glCore;n.prototype=Object.create(PIXI.ObjectRenderer.prototype),n.prototype.constructor=n,n.prototype.onContextChange=function(){var e=this.renderer.gl;this.quad=new PIXI.Quad(e),this.drawModes=a(e),this.normalShader=[new o(e,0),new o(e,1),new o(e,2)],this.quad.initVao(this.normalShader[0]),this._tempClamp=new Float32Array(4),this._tempColor=new Float32Array(4),this._tempRect=new PIXI.Rectangle,this._tempRect2=new PIXI.Rectangle,this._tempRect3=new PIXI.Rectangle,this._tempMatrix=new PIXI.Matrix,this._bigBuf=new Uint8Array(1<<20),this._renderTexture=new PIXI.BaseRenderTexture(1024,1024)},n.prototype.start=function(){},n.prototype.flush=function(){},n.prototype._getRenderTexture=function(e,r){return(this._renderTexture.width<e||this._renderTexture.height<r)&&(r=i(e),r=i(r),this._renderTexture.resize(e,r)),this._renderTexture},n.prototype._getBuf=function(e){var r=this._bigBuf;return r.length<e&&(e=i(e),r=new Uint8Array(e),this._bigBuf=r),r},n.prototype.render=function(e){if(e.texture.valid){var r=0;e.tileTransform&&(r=this.renderer.plugins.tilingSprite.isSimpleSprite(e)?1:2);var t=this.drawModes[e.blendMode];t?this._renderBlend(e,t[r]):this._renderNormal(e,this.normalShader[r])}},n.prototype._renderNormal=function(e,r){var t=this.renderer;t.bindShader(r),t.state.setBlendMode(e.blendMode),this._renderInner(e,r)},n.prototype._renderBlend=function(e,r){var t=this.renderer,n=e.getBounds(),i=t._activeRenderTarget,o=i.projectionMatrix,a=o.a<0,u=o.d<0,s=i.resolution,c=this._tempRect,d=i.sourceFrame||i.destinationFrame;c.x=0,c.y=0,c.width=d.width,c.height=d.height;var p=this._tempRect2,l=d.width*s,v=d.height*s;p.x=(n.x+o.tx/o.a)*s+l/2,p.y=(n.y+o.ty/o.d)*s+v/2,p.width=n.width*s,p.height=n.height*s,a&&(p.y=l-p.width-p.x),u&&(p.y=v-p.height-p.y);var h=(this._tempRect3,Math.floor(Math.max(c.x,p.x))),m=Math.ceil(Math.min(c.x+c.width,p.x+p.width)),f=Math.floor(Math.max(c.y,p.y)),x=Math.ceil(Math.min(c.y+c.height,p.y+p.height)),g=m-h,C=x-f;if(!(g<=0||C<=0)){var y=this._getRenderTexture(g,C);t.bindTexture(y,1);var S=t.gl;if(t.renderingToScreen&&i.root){this._getBuf(g*C*4);S.readPixels(h,f,g,C,S.RGBA,S.UNSIGNED_BYTE,this._bigBuf),S.texSubImage2D(S.TEXTURE_2D,0,0,0,g,C,S.RGBA,S.UNSIGNED_BYTE,this._bigBuf)}else S.copyTexSubImage2D(S.TEXTURE_2D,0,0,0,h,f,g,C);if(t.bindShader(r),t.state.setBlendMode(PIXI.BLEND_MODES.NORMAL),r.uniforms.mapMatrix){var I=this._tempMatrix;I.a=p.width/y.width/n.width,a?(I.a=-I.a,I.ty=(p.x-h)/y.width-(n.x+n.width)*I.a):I.tx=(p.x-h)/y.width-n.x*I.a,I.d=p.height/y.height/n.height,u?(I.d=-I.d,I.ty=(p.y-f)/y.height-(n.y+n.height)*I.d):I.ty=(p.y-f)/y.height-n.y*I.d,r.uniforms.mapMatrix=I.toArray(!0,r.uniforms.mapMatrix)}this._renderInner(e,r)}},n.prototype._renderInner=function(e,r){var t=this.renderer;r.tilingMode>0?t.plugins.tilingSprite.renderWithShader(e,1===r.tilingMode,r):this._renderSprite(e,r)},n.prototype._renderSprite=function(e,r){for(var t=this.renderer,n=this.quad,i=e.texture._uvs,o=(n.vertices,e.computedGeometry?e.computedGeometry.vertices:e.vertexData),a=0;a<8;a++)n.vertices[a]=o[a];n.uvs[0]=i.x0,n.uvs[1]=i.y0,n.uvs[2]=i.x1,n.uvs[3]=i.y1,n.uvs[4]=i.x2,n.uvs[5]=i.y2,n.uvs[6]=i.x3,n.uvs[7]=i.y3,n.upload();var u=e.texture.frame,s=e.texture.baseTexture,c=this._tempClamp,d=.5/s.resolution;c[0]=(u.x+d)/s.width,c[1]=(u.y+d)/s.height,c[2]=(u.x+u.width-d)/s.width,c[3]=(u.y+u.height-d)/s.height,r.uniforms.uTextureClamp=c;var p=this._tempColor;PIXI.utils.hex2rgb(e.tint,p);var l=e.worldAlpha;p[0]*=l,p[1]*=l,p[2]*=l,p[3]=l,r.uniforms.uColor=p,t.bindTexture(s,0),n.draw()},PIXI.WebGLRenderer.registerPlugin("picture",n),r.exports=n},{"./NormalShader":2,"./mapFilterBlendModesToPixi":8}],5:[function(e,r,t){function n(e,r,t,n){var o=i[n];PIXI.Shader.call(this,e,r.replace(/%SPRITE_UNIFORMS%/gi,o.vertUniforms).replace(/%SPRITE_CODE%/gi,o.vertCode),t.replace(/%SPRITE_UNIFORMS%/gi,o.fragUniforms).replace(/%SPRITE_CODE%/gi,o.fragCode)),this.tilingMode=n}var i=[{vertUniforms:"",vertCode:"gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\nvTextureCoord = aTextureCoord;",fragUniforms:"uniform vec4 uTextureClamp;",fragCode:"vec2 textureCoord = clamp(vTextureCoord, uTextureClamp.xy, uTextureClamp.zw);"},{vertUniforms:"uniform mat3 translationMatrix;\nuniform mat3 uTransform;",vertCode:"gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\nvTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;",fragUniforms:"",fragCode:"vec2 textureCoord = vTextureCoord;"},{vertUniforms:"uniform mat3 translationMatrix;\nuniform mat3 uTransform;",vertCode:"gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\nvTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;",fragUniforms:"uniform mat3 uMapCoord;\nuniform vec4 uClampFrame;\nuniform vec2 uClampOffset;",fragCode:"vec2 textureCoord = mod(vTextureCoord - uClampOffset, vec2(1.0, 1.0)) + uClampOffset;\ntextureCoord = (uMapCoord * vec3(textureCoord, 1.0)).xy;\ntextureCoord = clamp(textureCoord, uClampFrame.xy, uClampFrame.zw);"}];n.prototype=Object.create(PIXI.Shader.prototype),n.prototype.constructor=n,r.exports=n},{}],6:[function(e,r,t){function n(e){PIXI.Sprite.call(this,e)}n.prototype=Object.create(PIXI.Sprite.prototype),n.prototype.constructor=n,r.exports=n,n.prototype._renderWebGL=function(e){this.updateGeometry?this.updateGeometry():this.calculateVertices(),e.setObjectRenderer(e.plugins.picture),e.plugins.picture.render(this)}},{}],7:[function(e,r,t){function n(e,r,t){PIXI.extras.TilingSprite.call(this,e,r,t)}n.prototype=Object.create(PIXI.extras.TilingSprite.prototype),n.prototype.constructor=n,r.exports=n,n.prototype._renderWebGL=function(e){this.updateGeometry&&this.updateGeometry();const r=this._texture;r&&r.valid&&(this.tileTransform.updateLocalTransform(),this.uvTransform.update(),e.setObjectRenderer(e.plugins.picture),e.plugins.picture.render(this))}},{}],8:[function(e,r,t){function n(e,r){return r=r||[],r[i.BLEND_MODES.OVERLAY]=[new o(e,0),new o(e,1),new o(e,2)],r[i.BLEND_MODES.HARD_LIGHT]=[new a(e,0),new a(e,1),new a(e,2)],r}var i=PIXI,o=e("./OverlayShader"),a=e("./HardLightShader");r.exports=n},{"./HardLightShader":1,"./OverlayShader":3}],9:[function(e,r,t){var n={PictureSprite:e("./PictureSprite"),PictureTilingSprite:e("./PictureTilingSprite"),PictureRenderer:e("./PictureRenderer")};Object.assign(PIXI.extras,n),r.exports=n},{"./PictureRenderer":4,"./PictureSprite":6,"./PictureTilingSprite":7}]},{},[9])(9)});
//# sourceMappingURL=pixi-picture.min.js.map
