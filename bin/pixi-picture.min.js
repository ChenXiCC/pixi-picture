!function e(r,n,t){function o(a,u){if(!n[a]){if(!r[a]){var s="function"==typeof require&&require;if(!u&&s)return s(a,!0);if(i)return i(a,!0);var c=new Error("Cannot find module '"+a+"'");throw c.code="MODULE_NOT_FOUND",c}var d=n[a]={exports:{}};r[a][0].call(d.exports,function(e){var n=r[a][1][e];return o(n?n:e)},d,d.exports,e,r,n,t)}return n[a].exports}for(var i="function"==typeof require&&require,a=0;a<t.length;a++)o(t[a]);return o}({1:[function(e,r,n){function t(e){PIXI.Shader.call(this,e,"#define GLSLIFY 1\nattribute vec2 aVertexPosition;\n\nattribute vec2 aTextureCoord;\n\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\n\nuniform mat3 mapMatrix;\n\nvarying vec2 vTextureCoord;\n\nvarying vec2 vMapCoord;\n\nvoid main(void)\n\n{\n\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n\n    vMapCoord = (mapMatrix * vec3(aVertexPosition, 1.0)).xy;\n\n    vTextureCoord = aTextureCoord;\n\n}\n\n","#define GLSLIFY 1\nvarying vec2 vTextureCoord;\n\nvarying vec2 vMapCoord;\n\nvarying vec4 vColor;\n\nuniform sampler2D uSampler[2];\n\nuniform vec4 uTextureClamp;\n\nuniform vec4 uColor;\n\nvoid main(void)\n\n{\n\n    vec2 textureCoord = clamp(vTextureCoord, uTextureClamp.xy, uTextureClamp.zw);\n\n    vec4 source = texture2D(uSampler[0], textureCoord);\n\n    vec4 target = texture2D(uSampler[1], vMapCoord);\n\n    //reverse hardlight\r\n    //yeah, premultiplied\r\n    if (source.a == 0.0) {\n\n        gl_FragColor = vec4(0, 0, 0, 0);\n\n        return;\n\n    }\n\n    vec3 Cb = source.rgb/source.a, Cs;\n\n    if (target.a > 0.0) {\n\n        Cs = target.rgb / target.a;\n\n    }\n\n    vec3 multiply = Cb * Cs * 2.0;\n\n    vec3 Cs2 = Cs * 2.0 - 1.0;\n\n    vec3 screen = Cb + Cs2 - Cb * Cs2;\n\n    vec3 B;\n\n    if (Cb.r <= 0.5) {\n\n        B.r = multiply.r;\n\n    } else {\n\n        B.r = screen.r;\n\n    }\n\n    if (Cb.g <= 0.5) {\n\n        B.g = multiply.g;\n\n    } else {\n\n        B.g = screen.g;\n\n    }\n\n    if (Cb.b <= 0.5) {\n\n        B.b = multiply.b;\n\n    } else {\n\n        B.b = screen.b;\n\n    }\n\n    vec4 res;\n\n    res.xyz = (1.0 - source.a) * Cs + source.a * B;\n\n    res.a = source.a + target.a * (1.0-source.a);\n\n    gl_FragColor = vec4(res.xyz * res.a, res.a);\n\n}\n\n"),this.bind(),this.uniforms.uSampler=[0,1]}t.prototype=Object.create(PIXI.Shader.prototype),t.prototype.constructor=t,r.exports=t},{}],2:[function(e,r,n){function t(e){PIXI.Shader.call(this,e,"#define GLSLIFY 1\nattribute vec2 aVertexPosition;\n\nattribute vec2 aTextureCoord;\n\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\n\nuniform mat3 mapMatrix;\n\nvarying vec2 vTextureCoord;\n\nvarying vec2 vMapCoord;\n\nvoid main(void)\n\n{\n\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n\n    vMapCoord = (mapMatrix * vec3(aVertexPosition, 1.0)).xy;\n\n    vTextureCoord = aTextureCoord;\n\n}\n\n","#define GLSLIFY 1\nvarying vec2 vTextureCoord;\n\nvarying vec2 vMapCoord;\n\nvarying vec4 vColor;\n\nuniform sampler2D uSampler[2];\n\nuniform vec4 uTextureClamp;\n\nuniform vec4 uColor;\n\nvoid main(void)\n\n{\n\n    vec2 textureCoord = clamp(vTextureCoord, uTextureClamp.xy, uTextureClamp.zw);\n\n    vec4 source = texture2D(uSampler[0], textureCoord);\n\n    vec4 target = texture2D(uSampler[1], vMapCoord);\n\n    //reverse hardlight\r\n    if (source.a == 0.0) {\n\n        gl_FragColor = vec4(0, 0, 0, 0);\n\n        return;\n\n    }\n\n    //yeah, premultiplied\r\n    vec3 Cb = source.rgb/source.a, Cs;\n\n    if (target.a > 0.0) {\n\n        Cs = target.rgb / target.a;\n\n    }\n\n    vec3 multiply = Cb * Cs * 2.0;\n\n    vec3 Cb2 = Cb * 2.0 - 1.0;\n\n    vec3 screen = Cb2 + Cs - Cb2 * Cs;\n\n    vec3 B;\n\n    if (Cs.r <= 0.5) {\n\n        B.r = multiply.r;\n\n    } else {\n\n        B.r = screen.r;\n\n    }\n\n    if (Cs.g <= 0.5) {\n\n        B.g = multiply.g;\n\n    } else {\n\n        B.g = screen.g;\n\n    }\n\n    if (Cs.b <= 0.5) {\n\n        B.b = multiply.b;\n\n    } else {\n\n        B.b = screen.b;\n\n    }\n\n    vec4 res;\n\n    res.xyz = (1.0 - source.a) * Cs + source.a * B;\n\n    res.a = source.a + target.a * (1.0-source.a);\n\n    gl_FragColor = vec4(res.xyz * res.a, res.a);\n\n}\n\n"),this.bind(),this.uniforms.uSampler=[0,1]}t.prototype=Object.create(PIXI.Shader.prototype),t.prototype.constructor=t,r.exports=t},{}],3:[function(e,r,n){function t(e){PIXI.ObjectRenderer.call(this,e)}function o(e){return e+=0===e,--e,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e+1}var i=e("./PictureShader"),a=e("./mapFilterBlendModesToPixi");PIXI.glCore;t.prototype=Object.create(PIXI.ObjectRenderer.prototype),t.prototype.constructor=t,t.prototype.onContextChange=function(){var e=this.renderer.gl;this.quad=new PIXI.Quad(e),this.normalShader=new i(e),this.drawModes=a(e),this.quad.initVao(this.normalShader),this._tempClamp=new Float32Array(4),this._tempColor=new Float32Array(4),this._tempRect=new PIXI.Rectangle,this._tempRect2=new PIXI.Rectangle,this._tempRect3=new PIXI.Rectangle,this._tempMatrix=new PIXI.Matrix,this._bigBuf=new Uint8Array(1<<20),this._renderTexture=new PIXI.BaseRenderTexture(1024,1024)},t.prototype.start=function(){},t.prototype.flush=function(){},t.prototype._getRenderTexture=function(e,r){return(this._renderTexture.width<e||this._renderTexture.height<r)&&(r=o(e),r=o(r),this._renderTexture.resize(e,r)),this._renderTexture},t.prototype._getBuf=function(e){var r=this._bigBuf;return r.length<e&&(e=o(e),r=new Uint8Array(e),this._bigBuf=r),r},t.prototype.render=function(e){if(e.texture.valid){var r=this.drawModes[e.blendMode];r?this._renderBlend(e,r):this._renderNormal(e,this.normalShader)}},t.prototype._renderNormal=function(e,r){var n=this.renderer;n.bindShader(r),n.state.setBlendMode(e.blendMode),this._renderInner(e,r)},t.prototype._renderBlend=function(e,r){var n=this.renderer,t=e.getBounds(),o=n._activeRenderTarget,i=o.projectionMatrix,a=i.a<0,u=i.d<0,s=o.resolution,c=this._tempRect,d=o.sourceFrame||o.destinationFrame;c.x=0,c.y=0,c.width=d.width,c.height=d.height;var p=this._tempRect2,h=d.width*s,v=d.height*s;p.x=(t.x+i.tx/i.a)*s+h/2,p.y=(t.y+i.ty/i.d)*s+v/2,p.width=t.width*s,p.height=t.height*s,a&&(p.y=h-p.width-p.x),u&&(p.y=v-p.height-p.y);var l=(this._tempRect3,Math.floor(Math.max(c.x,p.x))),x=Math.ceil(Math.min(c.x+c.width,p.x+p.width)),m=Math.floor(Math.max(c.y,p.y)),g=Math.ceil(Math.min(c.y+c.height,p.y+p.height)),y=x-l,C=g-m;if(!(0>=y||0>=C)){var f=this._getRenderTexture(y,C);n.bindTexture(f,1);var b=n.gl;if(n.renderingToScreen&&o.root){this._getBuf(y*C*4);b.readPixels(l,m,y,C,b.RGBA,b.UNSIGNED_BYTE,this._bigBuf),b.texSubImage2D(b.TEXTURE_2D,0,0,0,y,C,b.RGBA,b.UNSIGNED_BYTE,this._bigBuf)}else b.copyTexSubImage2D(b.TEXTURE_2D,0,0,0,l,m,y,C);if(n.bindShader(r),n.state.setBlendMode(PIXI.BLEND_MODES.NORMAL),r.uniforms.mapMatrix){var I=this._tempMatrix;I.a=p.width/f.width/t.width,a?(I.a=-I.a,I.ty=(p.x-l)/f.width-(t.x+t.width)*I.a):I.tx=(p.x-l)/f.width-t.x*I.a,I.d=p.height/f.height/t.height,u?(I.d=-I.d,I.ty=(p.y-m)/f.height-(t.y+t.height)*I.d):I.ty=(p.y-m)/f.height-t.y*I.d,r.uniforms.mapMatrix=I.toArray(!0,r.uniforms.mapMatrix)}this._renderInner(e,r)}},t.prototype._renderInner=function(e,r){for(var n=this.renderer,t=this.quad,o=e.texture._uvs,i=(t.vertices,e.computedGeometry?e.computedGeometry.vertices:e.vertexData),a=0;8>a;a++)t.vertices[a]=i[a];t.uvs[0]=o.x0,t.uvs[1]=o.y0,t.uvs[2]=o.x1,t.uvs[3]=o.y1,t.uvs[4]=o.x2,t.uvs[5]=o.y2,t.uvs[6]=o.x3,t.uvs[7]=o.y3,t.upload();var u=e.texture.frame,s=e.texture.baseTexture,c=this._tempClamp;c[0]=u.x/s.width+.5/s.realWidth,c[1]=u.y/s.height+.5/s.realWidth,c[2]=(u.x+u.width)/s.width-.5/s.realWidth,c[3]=(u.y+u.height)/s.height-.5/s.realWidth,r.uniforms.uTextureClamp=c;var d=this._tempColor;PIXI.utils.hex2rgb(e.tint,d);var p=e.worldAlpha;d[0]*=p,d[1]*=p,d[2]*=p,d[3]=p,r.uniforms.uColor=d,n.bindTexture(s,0),t.draw()},PIXI.WebGLRenderer.registerPlugin("picture",t),r.exports=t},{"./PictureShader":4,"./mapFilterBlendModesToPixi":7}],4:[function(e,r,n){function t(e){PIXI.Shader.call(this,e,"#define GLSLIFY 1\nattribute vec2 aVertexPosition;\n\nattribute vec2 aTextureCoord;\n\nattribute vec4 aColor;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n\n{\n\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n\n    vTextureCoord = aTextureCoord;\n\n}\n\n","#define GLSLIFY 1\nvarying vec2 vTextureCoord;\n\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\n\nuniform vec4 uTextureClamp;\n\nuniform vec4 uColor;\n\nvoid main(void)\n\n{\n\n    vec2 textureCoord = clamp(vTextureCoord, uTextureClamp.xy, uTextureClamp.zw);\n\n    vec4 sample = texture2D(uSampler, textureCoord);\n\n    gl_FragColor = sample * uColor;\n\n}\n\n"),this.bind(),this.uniforms.uColor=new Float32Array(1,1,1,1)}t.prototype=Object.create(PIXI.Shader.prototype),t.prototype.constructor=t,r.exports=t},{}],5:[function(e,r,n){function t(e){PIXI.Sprite.call(this,e)}t.prototype=Object.create(PIXI.Sprite.prototype),t.prototype.constructor=t,r.exports=t,t.prototype._renderWebGL=function(e){this.updateGeometry&&this.updateGeometry(),e.setObjectRenderer(e.plugins.picture),e.plugins.picture.render(this)}},{}],6:[function(e,r,n){var t={PictureSprite:e("./PictureSprite"),PictureRenderer:e("./PictureRenderer")};Object.assign(PIXI.extras,t),r.exports=t},{"./PictureRenderer":3,"./PictureSprite":5}],7:[function(e,r,n){function t(e,r){return r=r||[],r[o.BLEND_MODES.OVERLAY]=new i(e),r[o.BLEND_MODES.HARD_LIGHT]=new a(e),r}var o=PIXI,i=e("./OverlayShader"),a=e("./HardLightShader");r.exports=t},{"./HardLightShader":1,"./OverlayShader":2}]},{},[6]);
//# sourceMappingURL=pixi-picture.min.js.map
